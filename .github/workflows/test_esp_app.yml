name: Run Test Application

on:
  workflow_call: {}
  workflow_dispatch: {}
jobs:
  run-target:
    name: Run Test App on target
    runs-on: [self-hosted, linux, docker, "${{ matrix.espidf_target }}"]  # (expects tags with the same name as espidf_target)
    container:
      image: python:3.9-bullseye
      options: --privileged  # (privileged mode has access to serial ports)
    strategy:
      fail-fast: false
      matrix:
        espidf_target: ["esp32", "esp32c3", "esp32s2", "esp32s3"]  # <--- Specify a list of Espressif chips connected to your runner
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download files / artifacts from build job
        uses: actions/download-artifact@v2
        with:
          name: test_app_bin_${{ matrix.espidf_target }}
          path: test_app/build
      - name: Install Python packages for PyTest
        env:
          PIP_PREFER_BINARY: true
          PIP_INDEX_URL: "https://dl.espressif.com/pypi/"
          PIP_EXTRA_INDEX_URL: "https://pypi.org/simple"
        run: |
          pip install \
            pytest-embedded \
            pytest-embedded-serial-esp \
            pytest-embedded-idf
      - name: Run Test App on target
        working-directory: test_app
        run: |
          pytest \
            --junit-xml=./test_app_results_${{ matrix.espidf_target }}.xml \
            --target=${{ matrix.espidf_target }}
      - name: Upload test results for publish-results job
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test_app_results_${{ matrix.espidf_target }}
          path: test_app/*.xml
  publish-results:
    name: Publish Test App results
    needs: run-target
    runs-on: ubuntu-20.04
    if: always()  # (run even if the previous steps have failed)
    steps:
      - name: Download Test results
        uses: actions/download-artifact@v3
        with:
          path: test_results
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test_results/**/*.xml
